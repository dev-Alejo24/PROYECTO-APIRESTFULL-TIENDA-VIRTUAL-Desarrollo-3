openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
paths:
  /api/identification-types:
    get:
      summary: Obtener todos los tipos de identificación
      responses:
        '200':
          description: Lista de tipos de identificación
        '500':
          description: Error interno del servidor
    post:
      summary: Crear un nuevo tipo de identificación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
      responses:
        '201':
          description: Tipo de identificación creado
        '400':
          description: Error en la solicitud

  /api/identification-types/{id}:
    get:
      summary: Obtener un tipo de identificación por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tipo de identificación encontrado
        '404':
          description: Tipo de identificación no encontrado
    put:
      summary: Actualizar un tipo de identificación
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
      responses:
        '200':
          description: Tipo de identificación actualizado
        '400':
          description: Error en la solicitud
        '404':
          description: Tipo de identificación no encontrado
    delete:
      summary: Eliminar un tipo de identificación
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tipo de identificación eliminado
        '404':
          description: Tipo de identificación no encontrado

  /api/addresses:
    get:
      summary: Obtener todas las direcciones
      responses:
        '200':
          description: Lista de direcciones
        '500':
          description: Error interno del servidor
    post:
      summary: Crear una nueva dirección
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zipCode:
                  type: string
      responses:
        '201':
          description: Dirección creada
        '400':
          description: Error en la solicitud

  /api/addresses/{id}:
    get:
      summary: Obtener una dirección por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dirección encontrada
        '404':
          description: Dirección no encontrada
    put:
      summary: Actualizar una dirección
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                street:
                  type: string
                city:
                  type: string
                state:
                  type: string
                zipCode:
                  type: string
      responses:
        '200':
          description: Dirección actualizada
        '400':
          description: Error en la solicitud
        '404':
          description: Dirección no encontrada
    delete:
      summary: Eliminar una dirección
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dirección eliminada
        '404':
          description: Dirección no encontrada

  /api/users/register:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                password:
                  type: string
                typeId:
                  type: integer
                identificationNumber:
                  type: string
                addressId:
                  type: integer
      responses:
        '201':
          description: Usuario registrado
        '400':
          description: Error en la solicitud

  /api/users/login:
    post:
      summary: Iniciar sesión de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Usuario autenticado
        '400':
          description: Error en la solicitud

  /api/users/profile:
    get:
      summary: Obtener el perfil del usuario
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil del usuario
        '401':
          description: No autorizado
        '404':
          description: Perfil no encontrado

  /api/users/profile/{userId}:
    put:
      summary: Actualizar el perfil del usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                middleName:
                  type: string
                lastName:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                password:
                  type: string
                typeId:
                  type: integer
                identificationNumber:
                  type: string
                addressId:
                  type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil actualizado
        '400':
          description: Error en la solicitud
        '401':
          description: No autorizado
        '404':
          description: Perfil no encontrado

    delete:
      summary: Eliminar el perfil del usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil eliminado
        '401':
          description: No autorizado
        '404':
          description: Perfil no encontrado

  /api/users/profile/roles:
    get:
      summary: Obtener todos los roles
      description: Devuelve una lista de todos los roles disponibles.
      responses:
        '200':
          description: Lista de roles obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
      security:
        - bearerAuth: []

  /api/users/profile/roles/get/{roleId}:
    get:
      summary: Obtener un rol por ID
      parameters:
        - name: roleId
          in: path
          required: true
          description: ID del rol a obtener.
          schema:
            type: integer
      responses:
        '200':
          description: Rol obtenido exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '400':
          description: Error en la validación del ID.
      security:
        - bearerAuth: []

  /api/users/profile/roles/create:
    post:
      summary: Crear un nuevo rol
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del rol.
      responses:
        '201':
          description: Rol creado exitosamente.
        '400':
          description: Error en la validación del cuerpo.
      security:
        - bearerAuth: []

  /api/users/profile/roles/update/{roleId}:
    put:
      summary: Actualizar un rol por ID
      parameters:
        - name: roleId
          in: path
          required: true
          description: ID del rol a actualizar.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre actualizado del rol.
      responses:
        '200':
          description: Rol actualizado exitosamente.
        '400':
          description: Error en la validación del cuerpo o del ID.
      security:
        - bearerAuth: []

  /api/users/profile/roles/delete/{roleId}:
    delete:
      summary: Eliminar un rol por ID
      parameters:
        - name: roleId
          in: path
          required: true
          description: ID del rol a eliminar.
          schema:
            type: integer
      responses:
        '200':
          description: Rol eliminado exitosamente.
        '400':
          description: Error en la validación del ID.
      security:
        - bearerAuth: []

  /api/users/profile/roles/count:
    get:
      summary: Contar la cantidad total de roles
      description: Devuelve el número total de roles registrados.
      responses:
        '200':
          description: Cantidad de roles obtenida exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
      security:
        - bearerAuth: []

  /api/users/profile/roles/search/{name}:
    get:
      summary: Buscar un rol por nombre
      parameters:
        - name: name
          in: path
          required: true
          description: Nombre del rol a buscar.
          schema:
            type: string
      responses:
        '200':
          description: Rol encontrado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Rol no encontrado.
      security:
        - bearerAuth: []
  /api/users/userRoles/{userId}:
    get:
      tags:
        - UserRoles
      summary: Obtener roles de un usuario específico
      description: Obtiene la lista de roles asignados a un usuario.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID del usuario.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de roles asignados al usuario.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

  /api/users/userRoles/lista/{userId}:
    get:
      tags:
        - UserRoles
      summary: Lista de roles de un usuario específico
      description: Devuelve la lista detallada de roles asignados a un usuario.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID del usuario.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista detallada de roles asignados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

  /api/users/userRoles/total/{userId}:
    get:
      tags:
        - UserRoles
      summary: Total de roles asignados a un usuario
      description: Calcula el número total de roles asignados a un usuario específico.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID del usuario.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Número total de roles asignados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalRoles:
                    type: integer
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

  /api/users/profile/userRoles:
    post:
      tags:
        - UserRoles
      summary: Asignar un nuevo rol a un usuario
      description: Crea una nueva relación entre un usuario y un rol.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                roleId:
                  type: integer
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Rol asignado exitosamente.
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

  /api/users/profile/userRoles/{userId}:
    put:
      tags:
        - UserRoles
      summary: Actualizar roles de un usuario
      description: Actualiza los roles asignados a un usuario específico.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID del usuario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleIds:
                  type: array
                  items:
                    type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Roles actualizados exitosamente.
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

  /api/users/profile/delete/userRoles/{userId}:
    delete:
      tags:
        - UserRoles
      summary: Eliminar roles de un usuario
      description: Elimina todos los roles asignados a un usuario específico.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          description: ID del usuario.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Roles eliminados exitosamente.
        '400':
          description: Error en los parámetros enviados.
        '401':
          description: No autorizado.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT